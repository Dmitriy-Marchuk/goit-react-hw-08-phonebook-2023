{"version":3,"file":"static/js/266.50858834.chunk.js","mappings":"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","sources":["components/App.styled.js","redux/contacts/selectors.js","components/ContactElement/ContactElement.styled.js","components/ContactElement/ContactElement.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/PhonebookFrom/PhonebookFrom.styled.js","components/PhonebookFrom/PhonebookForm.jsx","pages/Phonebook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px;\n  color: #010101;\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const ContactElementStyled = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n\n  div {\n    display: inherit;\n  }\n  p {\n    :first-child {\n      margin-right: 10px;\n    }\n  }\n`;\n\nexport const DeleteButton = styled.button`\n  margin-left: 20px;\n  padding: 5px 10px;\n  border: none;\n  border-radius: 8px;\n  font-size: 15px;\n  color: #fff;\n  background-color: #3182ce;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: #f6ad55;\n    transition: ease-in-out 250ms;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ContactElementStyled, DeleteButton } from './ContactElement.styled';\n\nconst ContactElement = ({ contact }) => {\n  const { name, number, id } = contact;\n\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <ContactElementStyled>\n      <div>\n        <p>{name}:</p>\n        <p>{number}</p>\n      </div>\n      <DeleteButton onClick={handleDelete}>Delete contact</DeleteButton>\n    </ContactElementStyled>\n  );\n};\n\nContactElement.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ContactElement;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport ContactElement from 'components/ContactElement/ContactElement';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(state => state.filter.filter);\n\n  const filteredContacts = contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n      contact.number.includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul>\n      {filteredContacts.map(contact => (\n        <ContactElement key={contact.id} contact={contact} />\n      ))}\n    </ul>\n  );\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 25px 20px;\n`;\nexport const FilterInput = styled.input`\n  width: 300px;\n  height: 100%;\n  padding: 5px;\n  margin-bottom: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  border: 1px solid black;\n  border-radius: 8px;\n  :hover,\n  :focus {\n    border-color: #f6ad55;\n    outline: none;\n    transition: ease-in-out 250ms;\n  }\n`;\n\nexport const FilterInputLabel = styled.label`\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 3px;\n  font-weight: 700;\n`;\n\nexport const FilterTitle = styled.h2`\n  max-width: 385px;\n  margin-left: auto;\n  margin-right: auto;\n  border-bottom: 1px solid black;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport {\n  FilterInput,\n  FilterInputLabel,\n  FilterWrapper,\n  FilterTitle,\n} from './Filter.styled';\n\nconst Filter = ({ title }) => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <>\n      <FilterTitle>{title}</FilterTitle>\n      <FilterWrapper>\n        <FilterInputLabel htmlFor=\"filter\">\n          Find contacts by name\n        </FilterInputLabel>\n        <FilterInput id=\"filter\" type=\"text\" onChange={handleChange} />\n      </FilterWrapper>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid black;\n  border-radius: 15px;\n  padding: 30px;\n  margin-bottom: 30px;\n  max-width: 385px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const StyledInput = styled.input`\n  height: 100%;\n  padding: 5px 10px;\n  margin-bottom: 10px;\n  border: 1px solid black;\n  border-radius: 8px;\n\n  :hover,\n  :focus {\n    border-color: #f6ad55;\n    outline: none;\n    transition: ease-in-out 250ms;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  font-weight: 500;\n`;\n\nexport const StyledButton = styled.button`\n  padding: 8px;\n  margin-top: 10px;\n  border: none;\n  border-radius: 8px;\n  color: #fff;\n  background-color: #3182ce;\n  cursor: pointer;\n  :hover,\n  :focus {\n    background-color: #f6ad55;\n    transition: ease-in-out 250ms;\n  }\n`;\n\nexport const PhonebookTitle = styled.h2`\n  max-width: 385px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  StyledForm,\n  StyledInput,\n  StyledLabel,\n  StyledButton,\n  PhonebookTitle,\n} from './PhonebookFrom.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const PhonebookForm = ({ title }) => {\n  const dispatch = useDispatch();\n  const getContactsStore = useSelector(selectContacts);\n\n  const handleSubmit = e => {\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const contact = { name, number };\n\n    e.preventDefault();\n    dispatch(addContact(contact));\n\n    if (getContactsStore) {\n      getContactsStore.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n        ? alert(name + 'is already in contact book!')\n        : dispatch(addContact(name, number));\n    }\n    form.reset();\n  };\n\n  return (\n    <>\n      <PhonebookTitle>{title}</PhonebookTitle>\n      <StyledForm onSubmit={handleSubmit}>\n        <StyledLabel htmlFor=\"inputName\">Name</StyledLabel>\n        <StyledInput\n          name=\"name\"\n          id=\"inputName\"\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <StyledLabel htmlFor=\"inputNumber\">Number</StyledLabel>\n        <StyledInput\n          name=\"number\"\n          id=\"inputNumber\"\n          type=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <StyledButton type=\"submit\">Add contact</StyledButton>\n      </StyledForm>\n    </>\n  );\n};\n\nPhonebookForm.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default PhonebookForm;\n","import { AppContainer } from 'components/App.styled';\nimport Contacts from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport PhonebookForm from 'components/PhonebookFrom/PhonebookForm';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <AppContainer>\n      <div>\n        <Helmet>\n          <title>Contacts</title>\n        </Helmet>\n        <PhonebookForm title=\"Phonebook\" />\n        <Filter title=\"Contact list\" />\n        {isLoading && !error && <b>Request in progress...</b>}\n        <Contacts />\n      </div>\n    </AppContainer>\n  );\n};\n\nexport default Phonebook;\n"],"names":["AppContainer","styled","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","ContactElementStyled","DeleteButton","contact","name","number","id","dispatch","useDispatch","onClick","deleteContact","useSelector","filter","filteredContacts","toLowerCase","includes","map","FilterWrapper","FilterInput","FilterInputLabel","FilterTitle","title","htmlFor","type","onChange","e","setFilter","target","value","StyledForm","StyledInput","StyledLabel","StyledButton","PhonebookTitle","getContactsStore","onSubmit","form","elements","preventDefault","addContact","find","alert","reset","pattern","required","useEffect","fetchContacts","Helmet"],"sourceRoot":""}